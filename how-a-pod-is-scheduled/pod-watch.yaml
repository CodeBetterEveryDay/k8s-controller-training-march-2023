apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-03-29T16:14:49Z"
  labels:
    run: hello
  name: hello
  namespace: default
  resourceVersion: "2234"
  uid: 71579c62-e4bc-4c88-9e09-e0f8195e7786
spec:
  containers:
    - args:
        - sleep
        - "100000"
      image: ubuntu
      imagePullPolicy: Always
      name: hello
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-sstzm
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-sstzm
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  phase: Pending
  qosClass: BestEffort
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-03-29T16:14:49Z"
  labels:
    run: hello
  name: hello
  namespace: default
  resourceVersion: "2235"
  uid: 71579c62-e4bc-4c88-9e09-e0f8195e7786
spec:
  containers:
    - args:
        - sleep
        - "100000"
      image: ubuntu
      imagePullPolicy: Always
      name: hello
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-sstzm
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: kind-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-sstzm
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:14:49Z"
      status: "True"
      type: PodScheduled
  phase: Pending
  qosClass: BestEffort
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-03-29T16:14:49Z"
  labels:
    run: hello
  name: hello
  namespace: default
  resourceVersion: "2237"
  uid: 71579c62-e4bc-4c88-9e09-e0f8195e7786
spec:
  containers:
    - args:
        - sleep
        - "100000"
      image: ubuntu
      imagePullPolicy: Always
      name: hello
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-sstzm
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: kind-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-sstzm
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:14:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:14:49Z"
      message: "containers with unready status: [hello]"
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:14:49Z"
      message: "containers with unready status: [hello]"
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:14:49Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: ubuntu
      imageID: ""
      lastState: {}
      name: hello
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
  hostIP: 172.18.0.2
  phase: Pending
  qosClass: BestEffort
  startTime: "2023-03-29T16:14:49Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-03-29T16:14:49Z"
  labels:
    run: hello
  name: hello
  namespace: default
  resourceVersion: "2269"
  uid: 71579c62-e4bc-4c88-9e09-e0f8195e7786
spec:
  containers:
    - args:
        - sleep
        - "100000"
      image: ubuntu
      imagePullPolicy: Always
      name: hello
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-sstzm
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: kind-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-sstzm
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:14:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:15:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:15:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-03-29T16:14:49Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://9258131684540d9cf308b5f58aaaf4e913531c2bd862efd4cb45b0b8d279edff
      image: docker.io/library/ubuntu:latest
      imageID: docker.io/library/ubuntu@sha256:67211c14fa74f070d27cc59d69a7fa9aeff8e28ea118ef3babc295a0428a6d21
      lastState: {}
      name: hello
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-03-29T16:15:05Z"
  hostIP: 172.18.0.2
  phase: Running
  podIP: 10.244.0.5
  podIPs:
    - ip: 10.244.0.5
  qosClass: BestEffort
  startTime: "2023-03-29T16:14:49Z"
